{"version":3,"sources":["components/Palette.js","actions/constants.js","actions/index.js","components/Form.js","components/TodoItem.js","components/RealignmentItem.js","components/TodoItemList.js","components/Warning.js","components/TodoListTemplate.js","App.js","store/reducers.js","store/index.js","index.js"],"names":["Color","_ref","color","onColor","selected","react_default","a","createElement","className","concat","onClick","e","stopPropagation","Palette","_ref2","_ref2$colors","colors","input","_ref2$onEdit","onEdit","f","text","bolded","formState","id","checked","map","Palette_Color","key","constants","EDIT_INPUT","RESET_INPUT","ADD_LIST","CHECK_TOGGLE_LIST","EDIT_LIST","REMOVE_LIST","REALIGN_LIST","ADD_STATE","EDIT_STATE","REALIGN_MODE","REALIGN_GET_FID","REALIGN_FID_RESET","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_SUCCESS","GET_TODO_LIST","PUT_TODO_SUCCESS","PUT_TODO_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","editInput","type","C","loginSuccess","user","todolists","loginFailure","error","signupSuccess","userId","signupFailure","Form","toggleRealignMode","_this","props","onRealignMode","realignmentMode","modeState","submit","preventDefault","form","lists","userInfo","inputText","value","length","newList","timestamp","Date","toString","onAdd","editList","onEditSubmit","focus","prevProps","this","_this2","inputData","AddForm","onSubmit","ref","EditForm","defaultValue","components_Palette","Component","connect","state","dispatch","todoLists","addlist","oldtodolists","Object","toConsumableArray","push","axios","put","_id","then","response","addList","editlist","find","findIndex","list","realignMode","TodoItem","_ref$text","_ref$bolded","_ref$checked","_ref$color","_ref$id","_ref$form","_ref$userInfo","_ref$resetInput","resetInput","_ref$onAddList","onAddList","_ref$onEditList","onEditList","_ref$onCheckToggle","onCheckToggle","_ref$onRemoveList","onRemoveList","RealignmentItem","_ref$realignmentMode","_ref$onRealign_Fid","onRealign_Fid","_ref$onRealignList","onRealignList","r_checked","fId","lId","TodoItemList","sort","b","components_TodoItem","assign","components_RealignmentItem","editState","listId","reverse","splice","i","removeList","checkToggle","realignLists_getFid","selectFrom","realignList","reset","Warning","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","closing","nextProps","visible","setState","setTimeout","_this$props","message","TodoListTemplate","formStatus","warning","status","openLogin","bind","assertThisInitialized","handleLogout","openSignup","onChange","handleLogin","handleSignup","openHome","showWarning","onKeyPress","idInput","_this3","_this4","logout","_this5","pw","pwInput","localStorage","JSON","stringify","loginRequest","_this6","signupRequest","_this7","target","classList","add","remove","_this8","loginStatus","loginBtn","href","logoutBtn","authWrapper","defaultMode","components_Form","components_TodoItemList","loginMode","signupMode","undefined","components_Warning","password","post","data","catch","code","App","components_TodoListTemplate","arguments","action","initialUser","update","$set","parse","logger","store","next","console","groupCollapsed","log","getState","result","groupEnd","saver","storeFactory","initialState","stateData","applyMiddleware","thunk","createStore","combineReducers","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.53f44a44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./css/Palette.css\";\r\n\r\nconst Color = ({color, onColor ,selected}) => {\r\n    return (\r\n        <span \r\n            className={`palette-${color} color ${selected===color? \"active\" :\"\"}`} \r\n            onClick={(e)=>{\r\n                e.stopPropagation();\r\n                onColor(color);\r\n            }}>\r\n                <i className=\"material-icons\">invert_colors</i>\r\n            </span>\r\n    );\r\n}\r\n\r\nconst Palette = ({\r\n    colors=[\r\n        \"color1\", //#343a40\r\n        \"color2\", //#f03e3e\r\n        \"color3\", //#12b886\r\n        \"color4\" //#228ae6\r\n    ], \r\n    input,\r\n    onEdit=f=>f\r\n    }) => {    \r\n    const onBolded = () =>{\r\n        onEdit(input.text,input.color,!input.bolded,input.formState,input.id,input.checked);\r\n    }\r\n    const onColor = (color) =>{\r\n        if(input.color !== color){\r\n            input.color=color;\r\n            onEdit(input.text,input.color,input.bolded,input.formState,input.id,input.checked);\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"palette\">\r\n            {\r\n            colors.map(color=>(\r\n                <Color \r\n                    key={color}\r\n                    color={color}\r\n                    selected={input.color}  \r\n                    onColor={onColor}\r\n                />  \r\n            ))\r\n            }\r\n            <div className=\"make-bold\" \r\n            onClick={(e)=>{\r\n                e.stopPropagation();\r\n                onBolded();\r\n            }}><i className=\"fa fa-bold\"></i></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Palette;","const constants={\r\n    EDIT_INPUT:\"EDIT_INPUT\",\r\n    RESET_INPUT:\"RESET_INPUT\",\r\n    ADD_LIST:\"ADD_LIST\",\r\n    CHECK_TOGGLE_LIST:\"CHECK_TOGGLE_LIST\",\r\n    EDIT_LIST:\"EDIT_LIST\",\r\n    REMOVE_LIST:\"REMOVE_LIST\",\r\n    REALIGN_LIST:\"REALIGN_LIST\",\r\n\r\n    ADD_STATE:\"ADD_STATE\", //리스트 글쓰기모드\r\n    EDIT_STATE:\"EDIT_STATE\", //리스트 편집모드\r\n\r\n    REALIGN_MODE:\"REALIGN_MODE\", \r\n    REALIGN_GET_FID:\"REALIGN_GET_FID\",\r\n    REALIGN_FID_RESET: \"REALIGN_FID_RESET\",\r\n    \r\n    LOG_IN_SUCCESS: \"LOG_IN_SUCCESS\",\r\n    LOG_IN_FAILURE: \"LOG_IN_FAILURE\",\r\n    LOG_OUT_SUCCESS: \"LOG_OUT_SUCCESS\",\r\n    GET_TODO_LIST: \"GET_TODO_LIST\",\r\n    PUT_TODO_SUCCESS: \"PUT_TODO_SUCCESS\",\r\n    PUT_TODO_FAILURE: \"PUT_TODO_FAILURE\",\r\n\r\n    SIGN_UP_SUCCESS: \"SIGN_UP_SUCCESS\",\r\n    SIGN_UP_FAILURE: \"SIGN_UP_FAILURE\"\r\n}\r\n\r\nexport default constants;","import C from \"./constants\";\r\nimport axios from 'axios';\r\n\r\nexport const editInput = (text,color,bolded,formState,id,checked) => {\r\n    let isReset = text === 'RESET';\r\n    if(isReset){\r\n        return { type: C.RESET_INPUT }\r\n    }\r\n    return{\r\n        text,\r\n        color, \r\n        bolded,\r\n        formState,\r\n        id,\r\n        checked,\r\n        type: C.EDIT_INPUT\r\n    }\r\n}\r\n\r\n// export const addList = (id,text,color,bolded) =>({\r\n//     type:C.ADD_LIST,\r\n//     id,\r\n//     text,\r\n//     color,\r\n//     bolded,\r\n//     timestamp: new Date().toString()\r\n// })\r\n\r\nexport const addList = (userId, addlist, oldtodolists) =>{\r\n    let todolists = [...oldtodolists];\r\n    todolists.push(addlist);\r\n    if(userId){\r\n        axios.put('/api/lists/'+userId._id,{ todolists })\r\n        .then((response)=>{\r\n            todolists = response;\r\n        });\r\n    }\r\n    return{\r\n        type:C.ADD_LIST,\r\n        todolists\r\n    }\r\n}\r\nexport const removeList = (userInfo, listId) => {\r\n    let userId = userInfo.userId;\r\n    let todolists = [...userInfo.todolists].reverse(); //출력시 내림차순으로 출력되니 아이디를 다시 배열순으로 맞춰준다.\r\n    // let find = todolists.findIndex(list=>{\r\n    //     return list.id === listId\r\n    // });\r\n    // todolists.splice(find,1);\r\n    // todolists.map((list,i) => {\r\n    //     list.id = i;\r\n    //     return list;\r\n    // });\r\n    todolists.splice(listId,1);\r\n    todolists.map((list,i) => {\r\n        list.id = i;\r\n        return list;\r\n    });\r\n    if(userId){\r\n        axios.put('/api/lists/'+userId._id,{ todolists })\r\n        .then((response)=>{\r\n            todolists = response;\r\n        });\r\n    }\r\n    return{\r\n        type:C.REMOVE_LIST,\r\n        todolists\r\n    }\r\n}\r\nexport const checkToggle = (userInfo, id, checked) => {\r\n    let todolists = [...userInfo.todolists];\r\n    let userId = userInfo.userId;\r\n    todolists.map(list=>{\r\n        if(list.id === id){\r\n            list.checked = checked;\r\n        }\r\n        return list;\r\n    });\r\n    if(userId){\r\n        axios.put('/api/lists/'+userId._id,{ todolists })\r\n        .then((response)=>{\r\n            todolists = response;\r\n        });\r\n    }\r\n    return{\r\n        type:C.CHECK_TOGGLE_LIST,\r\n        todolists\r\n    }\r\n}\r\nexport const editList = (userId, editlist, oldtodolists) => {\r\n    let todolists = [...oldtodolists];\r\n    let find = todolists.findIndex((list)=>{\r\n        return list.id === editlist.id\r\n    });\r\n    todolists[find] = editlist;\r\n    if(userId){\r\n        axios.put('/api/lists/'+userId._id,{ todolists })\r\n        .then((response)=>{\r\n            todolists = response;\r\n        });\r\n    }\r\n    return {\r\n        type:C.EDIT_LIST,\r\n        todolists\r\n    }\r\n}\r\n\r\nexport const addState = () => ({\r\n    type:C.ADD_STATE\r\n})\r\nexport const editState = (id,text,color,bolded,checked) => ({\r\n    type:C.EDIT_STATE,\r\n    id,\r\n    text,\r\n    color,\r\n    bolded,\r\n    checked\r\n})\r\n\r\nexport const realignMode = (modeState) =>({\r\n    type:C.REALIGN_MODE,\r\n    modeState\r\n})\r\nexport const realignLists_getFid = (fId) =>{\r\n    let isReset = fId === -1;\r\n    if(!isReset){\r\n        return{\r\n            type: C.REALIGN_GET_FID,\r\n            fId\r\n        }\r\n    }else{\r\n        return{\r\n            type: C.REALIGN_FID_RESET\r\n        }\r\n    }\r\n}\r\nexport const realignList = (userInfo,fId,lId) =>{\r\n    let todolists = [...userInfo.todolists].reverse(); //출력시 내림차순으로 출력되니 아이디를 다시 배열순으로 맞춰준다.\r\n    let userId = userInfo.userId;\r\n    // const getFirst = todolists.findIndex(list => list.id === fId);\r\n    // const getLast = todolists.findIndex(list => list.id === lId);\r\n    const selectFrom = todolists[fId];\r\n    todolists.splice(fId, 1);\r\n    todolists.splice(lId, 0, selectFrom);\r\n    todolists.map((list,i) => {\r\n        list.id = i;\r\n        return list;\r\n    });\r\n    if(userId){\r\n        axios.put('/api/lists/'+userId._id,{ todolists })\r\n        .then((response)=>{\r\n            todolists = response;\r\n        });\r\n    }\r\n    return {\r\n        type:C.REALIGN_LIST,\r\n        todolists\r\n    }\r\n}\r\n\r\nexport function loginRequest(userId,password){\r\n    return (dispatch)=>{\r\n        return axios.post('/api/user/signin',{ userId, password })\r\n        .then((response)=>{\r\n            let user = response.data.user;\r\n            let todolists = response.data.todolists;\r\n            dispatch(loginSuccess(user,todolists));\r\n        }).catch((error)=>{\r\n            dispatch(loginFailure(error.response.data.code));\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const loginSuccess = (user,todolists) =>{\r\n    return {\r\n        type:C.LOG_IN_SUCCESS,\r\n        user,\r\n        todolists\r\n    }\r\n}\r\nexport const loginFailure = (error) =>{\r\n    return {\r\n        type:C.LOG_IN_FAILURE,\r\n        error\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return {\r\n        type: C.LOG_OUT_SUCCESS\r\n    }\r\n}\r\n\r\nexport function signupRequest(userId,password){\r\n    return (dispatch) =>{\r\n        return axios.post('/api/user/signup',{ userId, password })\r\n        .then((response)=>{\r\n            dispatch(signupSuccess(userId));\r\n        }).catch((error)=>{\r\n            dispatch(signupFailure(error.response.data.code));\r\n        });\r\n    }\r\n}\r\n\r\nexport const signupSuccess = (userId) =>{\r\n    return {\r\n        type: C.SIGN_UP_SUCCESS,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const signupFailure = (error) =>{\r\n    return {\r\n        type: C.SIGN_UP_FAILURE,\r\n        error\r\n    }\r\n}\r\n\r\nexport function putTodoLists(userId,todolists){\r\n    return (dispatch) =>{\r\n        return axios.put('/api/lists/'+userId,{ todolists })\r\n        .then((response)=>{\r\n            dispatch(putTodoSuccess(response.data.todolists));\r\n        }).catch((error)=>{\r\n            dispatch(putTodoFailure(error.response.data.code));\r\n        });\r\n    }\r\n}\r\n\r\nexport const putTodoSuccess = (todolists) =>{\r\n    return{\r\n        type: C.PUT_TODO_SUCCESS,\r\n        todolists\r\n    }\r\n}\r\n\r\nexport const putTodoFailure = (error)=>{\r\n    return {\r\n        type: C.PUT_TODO_FAILURE,\r\n        error\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./css/Form.css\";\r\nimport Palette from \"./Palette\";\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    editInput, \r\n    addList,\r\n    editList, \r\n    realignMode\r\n} from '../actions';\r\n\r\nclass Form extends Component{\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.form.text !== this.props.form.text){\r\n            this.inputText.value = this.props.form.text;\r\n        }\r\n    }\r\n    toggleRealignMode = () =>{\r\n        this.props.onRealignMode(!this.props.realignmentMode.modeState);\r\n        this.props.onEdit('RESET');\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const form = this.props.form;\r\n        const lists = this.props.userInfo.todolists;\r\n        const text = this.inputText.value;\r\n        const userId = this.props.userInfo.userId;\r\n        if(text.length < 1){\r\n            return;\r\n        }\r\n        if(form.formState === \"add\"){\r\n            let newId = lists.length;\r\n            let newList = {\r\n                id: newId,\r\n                text: text,\r\n                bolded: form.bolded,\r\n                color: form.color,\r\n                checked: false,\r\n                timestamp: new Date().toString()\r\n            }\r\n            this.props.onAdd(userId, newList, lists);\r\n        }else{\r\n            let editList = {\r\n                id: form.id,\r\n                text: text,\r\n                bolded: form.bolded,\r\n                color: form.color,\r\n                checked: form.checked,\r\n                timestamp: new Date().toString()\r\n            }\r\n            this.props.onEditSubmit(userId, editList, lists);\r\n        }\r\n        this.props.onEdit(\"RESET\"); // IT MEANS RESET\r\n        this.inputText.value = \"\";\r\n        this.inputText.className = \"\";\r\n        this.inputText.focus();\r\n    }\r\n    render(){\r\n        const inputData = this.props.form;\r\n        const AddForm = (\r\n            <form className=\"form\" \r\n                onSubmit={this.submit}>\r\n                <input \r\n                    className={`${inputData.color} ${inputData.bolded ? \"bold-font\" : \"\"}`} \r\n                    ref={(ref)=>{ this.inputText = ref }}\r\n                />\r\n                <button className=\"create-button\"><i className=\"material-icons\">edit</i></button>\r\n            </form>\r\n        );\r\n        const EditForm = (\r\n            <form className=\"form\" onSubmit={this.submit}>\r\n                <input \r\n                    className={`${inputData.color} ${inputData.bolded ? \"bold-font\" : \"\"}`}\r\n                    defaultValue={inputData.text}\r\n                    ref={(ref)=>{ this.inputText = ref }}   \r\n                    />\r\n                <button className=\"edit-button\"><i className=\"material-icons\">edit</i></button>\r\n            </form>\r\n        );\r\n        let input = '';\r\n        return(\r\n            <div className=\"todo-form\">\r\n                <div className=\"palette-with-btns\">\r\n                    <div className=\"sort-btn\" onClick={this.toggleRealignMode}><i className=\"fa fa-reorder\"></i></div>\r\n                    <Palette input={this.props.form} onEdit={this.props.onEdit} />\r\n                </div>\r\n                {\r\n                    this.props.form.formState === \"add\" ? \r\n                    AddForm :\r\n                    EditForm\r\n                }\r\n            </div>\r\n         )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state =>({\r\n        form:state.form,\r\n        userInfo:state.userInfo,\r\n        realignmentMode:state.realignmentMode\r\n    }),\r\n    dispatch => ({\r\n        onEdit(text,color,bolded,formState,id,checked){\r\n            dispatch(editInput(text,color,bolded,formState,id,checked));\r\n        },\r\n        onAdd(userId, newList, todoLists){\r\n            dispatch(addList(userId, newList, todoLists));\r\n        },\r\n        onEditSubmit(userId, newList, todoLists){\r\n            dispatch(editList(userId, newList, todoLists));\r\n        },\r\n        onRealignMode(modeState){\r\n            dispatch(realignMode(modeState));\r\n        }\r\n    })\r\n\r\n)(Form);","import React from \"react\";\r\nimport \"./css/TodoItem.css\";\r\n\r\nconst TodoItem = ({ \r\n    text=\"\",\r\n    bolded=false,\r\n    checked=false,\r\n    color=\"color1\",\r\n    id=-1, \r\n    form={},\r\n    userInfo={},\r\n    resetInput=f=>f,\r\n    onAddList=f=>f,\r\n    onEditList=f=>f,\r\n    onCheckToggle=f=>f, \r\n    onRemoveList=f=>f}) => {\r\n    return(\r\n        <div className={`todo-item ${(form.formState === \"edit\" && form.id === id) ? \"edit-item\" : \"\"}`} \r\n            onClick={() => \r\n                onCheckToggle(userInfo, id, !checked)\r\n            }>\r\n            <div className={`remove ${checked ? \"checked\" : \"\"}`} onClick={(e) => {\r\n                e.stopPropagation();\r\n                onRemoveList(userInfo, id);\r\n                resetInput('RESET');\r\n            }}><i className=\"material-icons\">delete_forever</i></div>\r\n            <div className={`todo-text ${color} ${checked ? \"checked\" : \"\"} ${bolded ? \"bold-font\" : \"\"}`}>\r\n                <div>{ text }</div>\r\n            </div>\r\n            {\r\n                checked && (<div className=\"check-mark\"><i className=\"material-icons\">done</i></div>) //checked가 true면 우측 실행, ( 좌측이 true일 경우 )항상 우측이 반환됨\r\n            }\r\n            <div className=\"edit-btn\" onClick={(e) => {\r\n                e.stopPropagation();\r\n                form.formState === \"add\" ? onEditList(id,text,color,bolded,checked) :\r\n                    form.id === id ? onAddList() : onEditList(id,text,color,bolded,checked);\r\n            }}><i className=\"material-icons\">edit</i></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport \"./css/RealignmentItem.css\"\r\n\r\nconst RealignmentItem = ({ \r\n    text=\"\", \r\n    id=-1, \r\n    color=\"color1\", \r\n    bolded=false, \r\n    checked=false, \r\n    realignmentMode={}, \r\n    userInfo={},\r\n    onRealign_Fid=f=>f,\r\n    onRealignList=f=>f, }) => {\r\n    let r_checked = realignmentMode.fId === id;\r\n    const realignList = (fId,lId) =>{\r\n        if(fId!==lId){\r\n            onRealignList(userInfo,fId,lId);\r\n        }\r\n        onRealign_Fid(-1); //IT MEANS RESET\r\n    }\r\n    return(\r\n        <div className={`realignment-item  ${r_checked ? \"r_checked\" : \"\"}`} \r\n            onClick={()=>{\r\n                realignmentMode.fId<0 ? onRealign_Fid(id) : \r\n                realignList(realignmentMode.fId,id)\r\n            }}>\r\n            <div className={`realignment-btn ${r_checked ? \"r_checked\" : \"\"}`}><i className=\"fa fa-sort\"></i></div>\r\n            <div className= {`realignment-text ${color} ${checked ? \"checked\" : \"\"} ${bolded ? \"bold-font\" : \"\"}`} >\r\n                <div>{ text }</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RealignmentItem;","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport RealignmentItem from \"./RealignmentItem\";\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    removeList, \r\n    checkToggle, \r\n    editState, \r\n    addState, \r\n    realignLists_getFid, \r\n    realignList,\r\n    editInput\r\n} from '../actions';\r\n\r\nclass TodoItemList extends Component{ \r\n    render(){\r\n        const realignmentMode = this.props.realignmentMode;\r\n        const todolists = this.props.userInfo.todolists.sort((a,b)=>{\r\n                return b[\"id\"] - a[\"id\"];\r\n            });\r\n        return (\r\n            <div>\r\n                {\r\n                    todolists.map(list => (\r\n                        realignmentMode.modeState === false ? \r\n                        <TodoItem \r\n                            form = {this.props.form}\r\n                            userInfo = {this.props.userInfo}\r\n                            {...list}\r\n                            onRemoveList={this.props.onRemoveList}\r\n                            onAddList={this.props.onAddList}\r\n                            onEditList={this.props.onEditList}\r\n                            onCheckToggle={this.props.onCheckToggle}\r\n                            key={list.id}\r\n                            resetInput = {this.props.resetInput}\r\n                        /> :\r\n\r\n                        <RealignmentItem \r\n                            {...list} \r\n                            key={list.id}\r\n                            userInfo = {this.props.userInfo}\r\n                            realignmentMode={realignmentMode}\r\n                            onRealign_Fid={this.props.onRealign_Fid}\r\n                            onRealignList={this.props.onRealignList}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n        state =>({\r\n            form:state.form,\r\n            userInfo:state.userInfo,\r\n            realignmentMode:state.realignmentMode\r\n        }),\r\n        dispatch => ({\r\n            onEditList(id,text,color,bolded,checked){\r\n                dispatch(editState(id,text,color,bolded,checked))\r\n            },\r\n            onAddList(){\r\n                dispatch(addState())\r\n            },\r\n            onRemoveList(userInfo, id){\r\n                dispatch(removeList(userInfo, id))\r\n            },\r\n            onCheckToggle(userInfo, id, checked){\r\n                dispatch(checkToggle(userInfo, id, checked))\r\n            },\r\n            onRealign_Fid(fId){\r\n                dispatch(realignLists_getFid(fId))\r\n            },\r\n            onRealignList(userInfo,fId,lId){\r\n                dispatch(realignList(userInfo,fId,lId))\r\n            },\r\n            resetInput(reset){\r\n                dispatch(editInput(reset));\r\n            }\r\n        })\r\n)(TodoItemList);\r\n","import React, { Component } from 'react'\r\nimport './css/Warning.css';\r\nclass Warning extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            closing: false\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(this.props.visible && !nextProps.visible){\r\n            // visible props is changing from true -> false\r\n            this.setState({\r\n                closing:true\r\n            });\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    closing:false\r\n                });\r\n            },1000);\r\n        }\r\n    }\r\n    render() {\r\n        const { visible, message } = this.props;\r\n        const { closing } = this.state;\r\n        if(!visible && !closing) return null;\r\n        return (\r\n            <div className=\"warning-wrapper\">\r\n                <div className={`warning ${closing? 'bounceOutUp' : 'bounceIn'} animated`}>\r\n                    { message }\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default Warning;","import React,{ Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport \"./css/TodoListTemplate.css\";\r\nimport Form from './Form';\r\nimport TodoList from './TodoItemList';\r\nimport Warning from './Warning';\r\nimport { loginRequest, signupRequest, logout, editInput } from '../actions';\r\n\r\n\r\nclass TodoListTemplate extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            formStatus: false,\r\n            warning: {\r\n                status: false,\r\n                message: ''\r\n            }\r\n        }\r\n        this.openLogin = this.openLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n        this.openSignup = this.openSignup.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleSignup = this.handleSignup.bind(this);\r\n        this.openHome = this.openHome.bind(this);\r\n        this.showWarning = this.showWarning.bind(this);\r\n        this.onKeyPress = this.onKeyPress.bind(this);\r\n    }\r\n    openLogin(e){\r\n        e.preventDefault();\r\n        this.setState({\r\n            formStatus: 'login'\r\n        },()=>{\r\n            this.idInput.focus();\r\n        });\r\n    }\r\n    openSignup(e){\r\n        e.preventDefault();\r\n        this.setState({\r\n            formStatus: 'signup'\r\n        },()=>{\r\n            this.idInput.focus();\r\n        });\r\n    }\r\n    handleLogout(e){\r\n        e.preventDefault();\r\n        this.props.logout();\r\n        this.setState({\r\n            formStatus: false\r\n        },()=>{\r\n            this.props.resetInput('RESET');\r\n        })\r\n    }\r\n    openHome(e){\r\n        e.preventDefault();\r\n        this.setState({\r\n            formStatus: false\r\n        })\r\n    }\r\n    handleLogin(){\r\n        let id = this.idInput.value;\r\n        let pw = this.pwInput.value;\r\n        localStorage[\"backup-todo\"] = JSON.stringify(this.props.userInfo.todolists);\r\n        this.props.loginRequest(id,pw).then(()=>{\r\n            if(this.props.userInfo.status === 'LOGGED_IN'){\r\n                this.setState({\r\n                    formStatus:false,\r\n                });\r\n                this.showWarning(`Welcome, ${this.props.userInfo.userId.userId}`);\r\n                \r\n            }else{\r\n                this.showWarning(`Log-in Request Failed.`);\r\n            }\r\n        });\r\n    }\r\n    handleSignup(){\r\n        let id = this.idInput.value;\r\n        let pw = this.pwInput.value;\r\n        this.props.signupRequest(id,pw).then(()=>{\r\n            if(this.props.userInfo.status === 'SIGNUP_SUCCESS'){\r\n                this.setState({\r\n                    formStatus:false,\r\n                });\r\n                this.showWarning(`${id} Successfully Joined.`);\r\n            }else{\r\n                this.showWarning(`Sign-up Request Failed.`);\r\n            }\r\n        });\r\n    }\r\n    showWarning(message){\r\n        this.setState({\r\n            warning:{\r\n                status:true,\r\n                message:message\r\n            }\r\n        });\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                warning:{\r\n                    status:false,\r\n                    message:message\r\n                }\r\n            });\r\n        },1500);\r\n    }\r\n    onChange(e){\r\n        if(e.target.value.length>0){\r\n            e.target.classList.add('on');\r\n        }else{\r\n            e.target.classList.remove('on');\r\n        }\r\n    }\r\n    onKeyPress(e){\r\n        if(e.key === 'Enter'){\r\n            if(this.state.formStatus === 'signup'){\r\n                this.handleSignup();\r\n            }else if(this.state.formStatus === 'login'){\r\n                this.handleLogin();\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        const loginStatus = this.props.userInfo.status === 'LOGGED_IN' ;\r\n        const loginBtn = (<a href=\"/\" className=\"btn\" onClick={this.openLogin}><i className=\"material-icons\">vpn_key</i></a>)\r\n        const logoutBtn = (<a href=\"/\" className=\"btn\" onClick={this.handleLogout}><i className=\"material-icons\">lock_open</i></a>)\r\n        const authWrapper = (\r\n            <div className=\"auth-wrapper\">\r\n                { loginStatus ? (<div><span>{`[ ${this.props.userInfo.userId.userId} ]`}</span> {logoutBtn}</div>) : loginBtn }\r\n            </div>\r\n        )\r\n        const defaultMode = (\r\n            <div>\r\n                <section className=\"form-wrapper\">\r\n                    <Form />\r\n                </section>\r\n                <section className=\"todos-wrapper\">\r\n                    <TodoList />\r\n                </section>\r\n            </div>\r\n        )\r\n        const loginMode = (\r\n            <section className=\"sign-wrapper\">\r\n                <form>\r\n                    <div >\r\n                        <input type=\"text\" onChange={this.onChange} \r\n                        ref={ref=> this.idInput = ref} />\r\n                        <label>id</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" \r\n                            onChange={this.onChange}\r\n                            ref={ref=> this.pwInput = ref} \r\n                            onKeyPress={this.onKeyPress} />\r\n                        <label>password</label>\r\n                    </div>\r\n                    <button type=\"button\" onClick={this.handleLogin}>LOG IN</button>\r\n                </form>\r\n                <div className=\"footer\">\r\n                    New Here? <a href=\"/\" onClick={this.openSignup}>Create an account</a>\r\n                </div>\r\n            </section>\r\n        )\r\n        const signupMode = (\r\n            <section className=\"sign-wrapper\">\r\n                <form>\r\n                    <div>\r\n                        <input type=\"text\" onChange={this.onChange} \r\n                        ref={ref=> this.idInput = ref} />\r\n                        <label>id</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" \r\n                            onChange={this.onChange} \r\n                            ref={ref=> this.pwInput = ref} \r\n                            onKeyPress={this.onKeyPress} />\r\n                        <label>password</label>\r\n                    </div>\r\n                    <button type=\"button\" onClick={this.handleSignup}>CREATE</button>\r\n                </form>\r\n            </section>\r\n        )\r\n        return(\r\n            <div className=\"todo-list-template\">\r\n                <header className=\"header\">\r\n                    <h1 className=\"title\"><a href=\"/\" onClick={this.openHome}>To do List</a></h1>\r\n                    {\r\n                        !this.state.formStatus ? authWrapper : undefined\r\n                    }\r\n                </header>\r\n                {\r\n                    !this.state.formStatus ? defaultMode : this.state.formStatus === 'login' ? loginMode : signupMode\r\n                }\r\n                <Warning visible={this.state.warning.status} message={this.state.warning.message} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n      userInfo: state.userInfo\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        loginRequest: (userId,password) =>{\r\n            return dispatch(loginRequest(userId,password));\r\n        },\r\n        signupRequest: (userId,password) =>{\r\n            return dispatch(signupRequest(userId,password));\r\n        },\r\n        logout: () =>{\r\n            dispatch(logout());\r\n        },\r\n        resetInput: (reset)=>{\r\n            dispatch(editInput(reset));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TodoListTemplate);","import React, { Component } from 'react';\nimport './App.css';\nimport TodoListTemplate from \"./components/TodoListTemplate\";\nimport 'font-awesome/css/font-awesome.min.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <TodoListTemplate />\n    );\n  }\n}\n\nexport default App;\n","import C from '../actions/constants';\r\nimport update from 'react-addons-update';\r\n\r\nexport const form = (input={},action) => {\r\n    switch (action.type){\r\n        case C.EDIT_INPUT:\r\n            return{\r\n                text:action.text,\r\n                bolded:action.bolded,\r\n                color:action.color,\r\n                formState:action.formState,\r\n                id:action.id,\r\n                checked:action.checked\r\n            }\r\n        case C.ADD_STATE:\r\n            return{\r\n                text:\"\",\r\n                bolded:false,\r\n                color:\"color1\",\r\n                formState:\"add\",\r\n                id:-1,\r\n                checked:false\r\n            }\r\n        case C.EDIT_STATE:\r\n            return{\r\n                text:action.text,\r\n                bolded:action.bolded,\r\n                color:action.color,\r\n                formState:\"edit\",\r\n                id:action.id,\r\n                checked:action.checked\r\n            }\r\n        case C.RESET_INPUT:\r\n            return{\r\n                text:\"\",\r\n                bolded:false,\r\n                color:\"color1\",\r\n                formState:\"add\",\r\n                id:-1,\r\n                checked:false\r\n            }\r\n        default :\r\n            return input\r\n    }\r\n}\r\n\r\n\r\n// export const list = (list={},action) => {\r\n//     switch (action.type) {\r\n//         case C.ADD_LIST:\r\n//             return{\r\n//                 id:action.id,\r\n//                 text:action.text,\r\n//                 bolded:action.bolded,\r\n//                 color:action.color,\r\n//                 timestamp:action.timestamp,\r\n//                 checked:false\r\n//             }\r\n//         case C.EDIT_LIST:\r\n//             return {\r\n//                     id:action.id,\r\n//                     text:action.text,\r\n//                     checked:action.checked,\r\n//                     bolded:action.bolded,\r\n//                     color:action.color,\r\n//                     timestamp:action.timestamp\r\n//                 }\r\n//         case C.CHECK_TOGGLE_LIST:\r\n//             return (list.id !== action.id) ? \r\n//             list :\r\n//             {\r\n//                 ...list,\r\n//                 checked:action.checked\r\n//             }\r\n//         default :\r\n//             return list\r\n//     }\r\n// }\r\n// export const lists = (lists=[],action) => {\r\n//     switch (action.type){\r\n//         case C.ADD_LIST :\r\n//             return update(\r\n//                 lists,{$push:[list({},action)]}\r\n//             )\r\n//         case C.CHECK_TOGGLE_LIST :\r\n//             return update(lists,{\r\n//                 [action.id]: { checked: { $set: action.checked} }\r\n//             })\r\n//         case C.EDIT_LIST :\r\n//             return update(lists,{\r\n//                 [action.id]: { $set: list({},action) }\r\n//             });\r\n//         case C.REMOVE_LIST :\r\n//             return update(lists,{\r\n//                 $splice : [[ action.id, 1 ]]\r\n//             }).map((list,i) => {\r\n//                 list.id = i;\r\n//                 return list;\r\n//             });\r\n//         case C.REALIGN_LIST :\r\n//             const getFirst = lists.findIndex(list => list.id === action.fId);\r\n//             const getLast = lists.findIndex(list => list.id === action.lId);\r\n//             return update(lists,{\r\n//                 $splice : [[getFirst,1], [getLast, 0, lists[getFirst]]]\r\n//             }).map((list,i) => {\r\n//                 list.id = i;\r\n//                 return list;\r\n//             });\r\n//         default:\r\n//             return lists\r\n//     }\r\n// }\r\n\r\nexport const realignmentMode = (realignmentMode={},action) => {\r\n    switch (action.type) {\r\n        case C.REALIGN_MODE :\r\n            return {\r\n                modeState:action.modeState,\r\n                fId:-1,\r\n                lId:-1\r\n            }\r\n        case C.REALIGN_GET_FID :\r\n            return {\r\n                modeState:true,\r\n                fId:action.fId,\r\n                lId:-1\r\n            }\r\n        case C.REALIGN_FID_RESET :\r\n            return {\r\n                modeState:true,\r\n                fId:-1,\r\n                lId:-1\r\n            }\r\n        default :\r\n            return realignmentMode\r\n    }\r\n}\r\n\r\nconst initialUser={\r\n    userId: false,\r\n    status:'INIT',\r\n    todolists: []\r\n}\r\nexport const userInfo = (user=initialUser, action) =>{\r\n    switch(action.type){\r\n        case C.ADD_LIST :\r\n            return update(user,{\r\n                    todolists: {\r\n                        $set: action.todolists\r\n                    }\r\n                });\r\n        case C.CHECK_TOGGLE_LIST :\r\n            return update(user,{\r\n                    todolists: {\r\n                        $set: action.todolists\r\n                    }\r\n                });\r\n        case C.EDIT_LIST :\r\n            return update(user,{\r\n                todolists: {\r\n                    $set: action.todolists\r\n                }\r\n            });\r\n        case C.REMOVE_LIST :\r\n            return update(user,{\r\n                todolists: {\r\n                    $set : action.todolists\r\n                }\r\n            })\r\n        case C.REALIGN_LIST :\r\n            return update(user,{\r\n                todolists: {\r\n                    $set: action.todolists\r\n                }\r\n            })\r\n\r\n        case C.LOG_IN_SUCCESS:\r\n            return update(user,{\r\n                userId: { $set: action.user },\r\n                status: { $set: 'LOGGED_IN' },\r\n                todolists: { $set: action.todolists }\r\n            })\r\n        case C.LOG_IN_FAILURE:\r\n            return update(user,{\r\n                status: { $set: 'LOGIN_FAILED'}\r\n            })\r\n        case C.LOG_OUT_SUCCESS:\r\n            return update(user,{\r\n                userId: { $set: false },\r\n                status: { $set: 'INIT' },\r\n                todolists: { $set: JSON.parse(localStorage[\"backup-todo\"]) }\r\n            })\r\n        case C.SIGN_UP_SUCCESS:\r\n            return update(user,{\r\n                status: { $set: 'SIGNUP_SUCCESS' }\r\n            })\r\n        case C.SIGN_UP_FAILURE:\r\n            return update(user,{\r\n                status: { $set: 'SIGNUP_FAILED'}\r\n            })\r\n        case C.PUT_TODO_SUCCESS:\r\n            return update(user,{\r\n                todolists: { $set: action.todolists }\r\n            })\r\n        case C.PUT_TODO_FAILURE:\r\n            return update(user,{\r\n                status: { $set: 'PUT_TODO_FAILED' + action.error }\r\n            })\r\n        default:\r\n            return user\r\n    }\r\n}\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { form, realignmentMode, userInfo } from \"./reducers\";\r\nimport stateData from \"./initialState.json\";\r\nimport thunk from 'redux-thunk';\r\n// import { createLogger } from 'redux-logger';\r\n// const logger = createLogger();\r\n\r\nconst logger = store => next => action => {\r\n    console.groupCollapsed(\"dispatching\", action.type);\r\n    console.log(\"prev state\", store.getState());\r\n    console.log(\"action\", action);\r\n    let result = next(action);\r\n    console.log(\"next state\",store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n}\r\n\r\nconst saver = store => next => action => {\r\n    let result = next(action);\r\n    localStorage[\"redux-store\"] = JSON.stringify(store.getState());\r\n    return result;\r\n}\r\n\r\nconst storeFactory = (initialState=stateData) =>\r\n    applyMiddleware(thunk, logger, saver)(createStore)(\r\n        combineReducers({ form, realignmentMode, userInfo }),\r\n        (localStorage[\"redux-store\"]) ?\r\n        JSON.parse(localStorage[\"redux-store\"]) :\r\n        initialState\r\n    )\r\n\r\nexport default storeFactory;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\nimport { Provider } from 'react-redux';\nimport storeFactory from './store';\n\nimport 'react-app-polyfill/ie9';\nimport 'core-js/fn/array/find';\nimport 'core-js/fn/array/includes';\nimport 'core-js/fn/number/is-nan';\n\nconst store = storeFactory();\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}